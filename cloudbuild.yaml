steps:
  # アプリが依存しているサービス群をビルド環境（ローカルネットワーク）に作成、起動
  - id: "INJECT"
    name: "gcr.io/$PROJECT_ID/cloud-builders/docker-compose"
    args: ["up", "-d"]
  # ベースとなるPythonイメージを用意してビルド時間を短縮
  # ビルド時間にこだわらないのであれば次のステップ[Build Image]と入れ替えて、イメージを呼び出してテストすればベースのメンテする手間は省ける
  - id: "TEST"
    name: "gcr.io/$PROJECT_ID/cloud-builders/pytest"
    args: ["pytest", "-v", "-s"]
    env:
      - DATABASE_USER=docker
      - DATABASE_NAME=docker
      - DATABASE_USER=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=postgres
      - GS_PROJECT_ID=$PROJECT_ID
      - GS_BUCKET_NAME=$PROJECT_ID-$BRANCH_NAME
  # Container Registry(GCP)にイメージ作成
  - id: "BUILD"
    name: "gcr.io/kaniko-project/executor"
    args:
      - --destination=gcr.io/$PROJECT_ID/django-startproject/app:$COMMIT_SHA
  # CloudRunへデプロイ
  # - id: "DEPLOY"
  #   name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     - "beta"
  #     - "run"
  #     - "deploy"
  #     - "django-startproject"
  #     - "--allow-unauthenticated"
  #     - "--platform"
  #     - "managed"
  #     - "--project"
  #     - "$PROJECT_ID"
  #     - "--image"
  #     - "gcr.io/$PROJECT_ID/django-startproject/app:$COMMIT_SHA"
  #     - "--region"
  #     - "asia-northeast1"
# Buildのタイムアウト時間
timeout: 900s
